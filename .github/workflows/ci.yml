name: ci

on:
  push:
    branches:
      - main
  pull_request:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  zizmor:
    name: static security analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: install the latest version of uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1

      - name: run zizmor
        run: uvx zizmor --format=sarif . > results.sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload SARIF file
        uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3.28.18
        with:
          sarif_file: results.sarif
          category: zizmor

  lint:
    name: lint
    runs-on: macos-latest
    needs: zizmor
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm

      - name: install dependencies
        run: pnpm install

      - name: run linting
        run: pnpm lint

  check:
    name: check
    runs-on: macos-latest
    needs: zizmor
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm

      - name: install dependencies
        run: pnpm install

      - name: run svelte-check
        run: pnpm check
        env:
          DATABASE_URL: test.db
          ENCRYPTION_KEY: test-key
          RESEND_API_KEY: test-key
          RESEND_TEST_MODE: true

  test:
    name: test
    runs-on: macos-latest
    needs: zizmor
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm

      - name: install dependencies
        run: pnpm install

      - name: run tests
        run: pnpm test
        env:
          DATABASE_URL: test.db
          ENCRYPTION_KEY: test-key
          RESEND_API_KEY: test-key
          RESEND_TEST_MODE: true

  build:
    name: build and push
    runs-on: ubuntu-latest
    needs: [lint, check, test]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: set up docker buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: login to github container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  cleanup:
    name: cleanup old images
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      packages: write
    steps:
      - name: delete old container images
        uses: actions/delete-package-versions@e5bc658cc4c965c472efe991f8beea3981499c55 # v5.0.0
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 1
          delete-only-untagged-versions: false
